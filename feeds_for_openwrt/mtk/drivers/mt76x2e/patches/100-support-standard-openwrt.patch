Index: mt76x2e-p4rev-113843/build/Makefile
===================================================================
--- mt76x2e-p4rev-113843.orig/build/Makefile
+++ mt76x2e-p4rev-113843/build/Makefile
@@ -1,5 +1,6 @@
+CONFIG_SUPPORT_OPENWRT=y
 ifeq ($(CONFIG_SUPPORT_OPENWRT),y)
-EXTRA_CFLAGS = -I$(src)/../src/include -I$(src)/../src/ate/include
+EXTRA_CFLAGS = -I$(src)/../src/include -I$(src)/../src/ate/include -DCONFIG_SUPPORT_OPENWRT
 DRV_NAME = mt76x2e
 RT_WIFI_DIR = ../src
 else
Index: mt76x2e-p4rev-113843/src/os/linux/rt_proc.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/os/linux/rt_proc.c
+++ mt76x2e-p4rev-113843/src/os/linux/rt_proc.c
@@ -61,7 +61,7 @@ int wl_proc_exit(void);
 #endif /* PROCREG_DIR */
 
 #ifdef CONFIG_PROC_FS
-extern struct proc_dir_entry *procRegDir;
+struct proc_dir_entry *procRegDir;
 
 #ifdef VIDEO_TURBINE_SUPPORT
 extern BOOLEAN UpdateFromGlobal;
@@ -498,8 +498,7 @@ int wl_video_proc_exit(void)
 
 int wl_proc_init(void)
 {
-	if (procRegDir == NULL)
-		procRegDir = proc_mkdir(PROCREG_DIR, NULL);
+	procRegDir = proc_mkdir(PROCREG_DIR, NULL);
 
 	if (procRegDir) {
 #ifdef VIDEO_TURBINE_SUPPORT
@@ -521,6 +520,8 @@ int wl_proc_exit(void)
 		remove_proc_entry("wl", procRegDir);
 #endif /* VIDEO_TURBINE_SUPPORT */
 
+	if (procRegDir)
+		proc_remove(procRegDir);
 	
 	return 0;
 }
Index: mt76x2e-p4rev-113843/src/os/linux/rt_linux.c
===================================================================
--- mt76x2e-p4rev-113843.orig/src/os/linux/rt_linux.c
+++ mt76x2e-p4rev-113843/src/os/linux/rt_linux.c
@@ -36,6 +36,7 @@
 #include "rt_os_util.h"
 #include "dot11i_wpa.h"
 #include <linux/rtnetlink.h>
+#include <linux/mtd/mtd.h>
 
 #if defined(CONFIG_RA_HW_NAT) || defined(CONFIG_RA_HW_NAT_MODULE)
 #if defined(CONFIG_SUPPORT_OPENWRT)
@@ -318,35 +319,79 @@ extern int ra_mtd_read_nm(char *name, lo
 #endif /* CONFIG_RALINK_FLASH_API */
 
 void RtmpFlashRead(
-	UCHAR *p,
-	ULONG a,
-	ULONG b)
-{
-#ifdef CONFIG_RALINK_FLASH_API
-	FlashRead((uint32_t *) p, (uint32_t *) a, (uint32_t) b);
-#else
-#ifdef RA_MTD_RW_BY_NUM
-	ra_mtd_read(MTD_NUM_FACTORY, 0, (size_t) b, p);
-#else
-	ra_mtd_read_nm("Factory", a&0xFFFF, (size_t) b, p);
-#endif
-#endif /* CONFIG_RALINK_FLASH_API */
+	UCHAR *buf,
+	ULONG from,
+	ULONG len)
+{
+	int ret = -1;
+	size_t rdlen;
+	struct mtd_info *mtd;
+
+	mtd = get_mtd_device_nm("factory");
+	if (IS_ERR(mtd)) {
+		printk("Not found mtd:factory\n");
+		return;
+	}
+
+	ret = mtd_read(mtd, from & 0xFFFF, len, &rdlen, buf);
+	if (rdlen != len)
+		printk("warning: RtmpFlashRead: rdlen is not equal to len\n");
+	put_mtd_device(mtd);
 }
 
 void RtmpFlashWrite(
-	UCHAR * p,
-	ULONG a,
-	ULONG b)
-{
-#ifdef CONFIG_RALINK_FLASH_API
-	FlashWrite((uint16_t *) p, (uint16_t *) a, (uint32_t) b);
-#else
-#ifdef RA_MTD_RW_BY_NUM
-	ra_mtd_write(MTD_NUM_FACTORY, 0, (size_t) b, p);
-#else
-	ra_mtd_write_nm("Factory", a&0xFFFF, (size_t) b, p);
-#endif
-#endif /* CONFIG_RALINK_FLASH_API */
+	UCHAR *buf,
+	ULONG to,
+	ULONG len)
+{
+	int ret = -1;
+	size_t rdlen, wrlen;
+	struct mtd_info *mtd;
+	struct erase_info ei;
+	u_char *bak = NULL;
+
+	mtd = get_mtd_device_nm("factory");
+	if (IS_ERR(mtd)) {
+		printk("Not found mtd:factory\n");
+		return;
+	}
+
+	if (len > mtd->erasesize) {
+		put_mtd_device(mtd);
+		printk("RtmpFlashWrite:Too big\n");
+		return;
+	}
+
+	bak = kzalloc(mtd->erasesize, GFP_KERNEL);
+	if (bak == NULL) {
+		put_mtd_device(mtd);
+		printk("RtmpFlashWrite:No mem\n");
+		return;
+	}
+
+	ret = mtd_read(mtd, 0, mtd->erasesize, &rdlen, bak);
+	if (ret) {
+		return;
+	}
+
+	if (rdlen != mtd->erasesize)
+		printk("warning: RtmpFlashWrite: rdlen is not equal to erasesize\n");
+
+	memcpy(bak + to, buf, len);
+
+	ei.mtd = mtd;
+	ei.callback = NULL;
+	ei.addr = 0;
+	ei.len = mtd->erasesize;
+	ei.priv = 0;
+
+	ret = mtd_erase(mtd, &ei);
+	if (ret)
+		return;
+
+	ret = mtd_write(mtd, 0, mtd->erasesize, &wrlen, bak);
+	udelay(10); /* add delay after write */
+	put_mtd_device(mtd);
 }
 #endif /* defined(RTMP_RBUS_SUPPORT) || defined(RTMP_FLASH_SUPPORT) */
 
